name: Release

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      release-type:
        description: 'Release type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
          - prerelease

env:
  NODE_VERSION: '20'
  PNPM_VERSION: '8'

jobs:
  release:
    name: Semantic Release
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip release')"
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Build application
        run: pnpm build
        
      - name: Run tests
        run: |
          pnpm test:unit
          pnpm test:integration
          
      - name: Semantic Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          HUSKY: 0
        run: pnpm exec semantic-release

  create-github-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: release
    if: success()
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Get version
        id: version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "tag=v${VERSION}" >> $GITHUB_OUTPUT
          
      - name: Generate changelog
        run: |
          npm install -g conventional-changelog-cli
          conventional-changelog -p angular -i CHANGELOG.md -s
          
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.tag }}
          release_name: Release ${{ steps.version.outputs.tag }}
          body_path: CHANGELOG.md
          draft: false
          prerelease: false

  docker-build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: release
    if: success()
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}
            ${{ secrets.DOCKERHUB_USERNAME }}/omniverse-geckos
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}
            
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            NODE_ENV=production
            NEXT_PUBLIC_APP_URL=https://omniversegeckos.com

  npm-publish:
    name: Publish to NPM
    runs-on: ubuntu-latest
    needs: release
    if: success() && contains(github.event.head_commit.message, 'feat:')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Build package
        run: pnpm build:package
        
      - name: Publish to NPM
        run: pnpm publish --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  notify:
    name: Notify Release
    runs-on: ubuntu-latest
    needs: [release, create-github-release, docker-build]
    if: always()
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Get version
        id: version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          
      - name: Send Discord notification
        uses: Ilshidur/action-discord@master
        with:
          args: |
            🚀 **Omniverse Geckos v${{ steps.version.outputs.version }}** has been released!
            
            📦 **What's New:**
            - Check the changelog for details
            
            🔗 **Links:**
            - [GitHub Release](https://github.com/${{ github.repository }}/releases/tag/v${{ steps.version.outputs.version }})
            - [Live Site](https://omniversegeckos.com)
            - [Docker Image](https://hub.docker.com/r/omniversegeckos/app)
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          
      - name: Send Telegram notification
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          format: markdown
          message: |
            🦎 *Omniverse Geckos Release* 
            
            🎉 Version `${{ steps.version.outputs.version }}` is now live!
            
            🔗 [View Release](https://github.com/${{ github.repository }}/releases/tag/v${{ steps.version.outputs.version }})
            🌐 [Visit Site](https://omniversegeckos.com)
            
      - name: Send email notification
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "🚀 Omniverse Geckos v${{ steps.version.outputs.version }} Released"
          to: ${{ secrets.NOTIFICATION_EMAIL }}
          from: "Omniverse Geckos CI <${{ secrets.EMAIL_USERNAME }}>"
          html_body: |
            <h2>🦎 Omniverse Geckos Release</h2>
            <p>Version <strong>${{ steps.version.outputs.version }}</strong> has been successfully released!</p>
            
            <h3>📋 Release Information</h3>
            <ul>
              <li><strong>Version:</strong> ${{ steps.version.outputs.version }}</li>
              <li><strong>Commit:</strong> ${{ github.sha }}</li>
              <li><strong>Author:</strong> ${{ github.actor }}</li>
            </ul>
            
            <h3>🔗 Links</h3>
            <ul>
              <li><a href="https://github.com/${{ github.repository }}/releases/tag/v${{ steps.version.outputs.version }}">GitHub Release</a></li>
              <li><a href="https://omniversegeckos.com">Live Website</a></li>
              <li><a href="https://hub.docker.com/r/omniversegeckos/app">Docker Image</a></li>
            </ul>
            
            <p>🎮 Happy gaming!</p>

  update-dependencies:
    name: Update Dependencies
    runs-on: ubuntu-latest
    needs: release
    if: success() && github.event_name == 'schedule'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
          
      - name: Update dependencies
        run: |
          pnpm update --interactive=false --latest
          
      - name: Create pull request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore: update dependencies'
          title: '🔄 Automated Dependency Update'
          body: |
            ## 🔄 Automated Dependency Update
            
            This PR updates all dependencies to their latest versions.
            
            ### ⚠️ Important Notes
            - Please review the changes carefully
            - Run tests before merging
            - Check for any breaking changes in the changelogs
            
            Generated by GitHub Actions 🤖
          branch: chore/update-dependencies
          delete-branch: true